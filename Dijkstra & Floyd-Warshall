import random
import time


def graf():
    global nrMuchii, nrMuchiiMax
    i = 1
    while i <= nrVirf:
        j = 1
        while j <= nrVirf:
            if i != j:
                r = random.randint(0, 100)
                if r < per:
                    r = random.randint(1, 1000)
                    dictionary[(i, j)] = r
                    nrMuchii += 1
            j += 1
        i += 1
    nrMuchii2 = float(nrMuchiiMax)
    phi2 = nrMuchii / nrMuchii2
    if (case == 1 and (phi2 < 0.32 or phi2 > 0.41)) or (case == 2 and (phi2 < 0.41 or phi2 > 0.68)) or (
            case == 3 and phi2 < 0.68):
        dictionary.clear()
        nrMuchii = 0
        graf()


def dijsktra(sursa):
    global count
    count = 0
    marcat = {}
    dist = {}
    i = 1
    while i <= nrVirf:
        marcat[i] = 0
        i += 1
    i = 1
    while i <= nrVirf:
        dist[i] = 1000000
        i += 1
    dist[sursa] = 0
    i = 0
    while i < nrVirf:
        mi = 1000000
        j = 1
        while j <= nrVirf:
            if dist[j] <= mi:
                if marcat[j] == 0:
                    mi = dist[j]
                    k = j
            j += 1
        for x in dictionary:
            count += 1
            if x[0] == k:
                if marcat[x[1]] == 0:
                    if dist[x[0]] + dictionary[(x[0], x[1])] < dist[x[1]]:
                        dist[x[1]] = dist[x[0]] + dictionary[(x[0], x[1])]
        marcat[k] = 1
        i += 1
    print("Rezultat dijsktra:")
    for i in range(1, nrVirf + 1):
        if i != sursa:
            if dist[i] == 1000000:
                print(sursa, '->', i, 'infinit')
            else:
                pon = dist[i]
                drum = [i]
                while pon != 0:
                    for j in range(1, nrVirf + 1):
                        if (j, drum[len(drum) - 1]) in dictionary:
                            if dist[drum[len(drum) - 1]] - dist[j] == dictionary[(j, drum[len(drum) - 1])]:
                                drum.append(dictionary[(j, drum[len(drum) - 1])])
                                drum.append(j)
                                pon -= dictionary[(j, drum[len(drum) - 3])]
                lun = len(drum) - 1
                while lun > 0:
                    print(drum[lun], '--(', drum[lun - 1], ')->', end='', sep='')
                    lun -= 2
                print(drum[0])
                del drum


def floyd(sursa):
    global count2
    count2 = 0
    global graf1
    dictionary2 = {}
    for i in range(1, nrVirf + 1):
        for j in range(1, nrVirf + 1):
            if (i, j) in dictionary:
                dictionary2[(i, j)] = dictionary[(i, j)]
            else:
                dictionary2[(i, j)] = 1000000
    for i in range(1, nrVirf + 1):
        for j in range(1, nrVirf + 1):
            for k in range(1, nrVirf + 1):
                count2 += 1
                if j != k:
                    dictionary2[(j, k)] = min(dictionary2[(j, k)], dictionary2[(j, i)] + dictionary2[(i, k)])
                else:
                    dictionary2[(j, k)] = 0
    print("Rezultat floyd:")
    for i in range(1, nrVirf + 1):
        if i != sursa:
            if dictionary2[(sursa, i)] == 1000000:
                print(sursa, '->', i, 'infinit')
            else:
                pon = dictionary2[(sursa, i)]
                drum = [i]
                while pon != 0:
                    for j in range(1, nrVirf + 1):
                        if (j, drum[len(drum) - 1]) in dictionary:
                            if dictionary2[(sursa, drum[len(drum) - 1])] - dictionary2[(sursa, j)] == dictionary[
                                (j, drum[len(drum) - 1])]:
                                drum.append(dictionary[(j, drum[len(drum) - 1])])
                                drum.append(j)
                                pon -= dictionary[(j, drum[len(drum) - 3])]
                lun = len(drum) - 1
                while lun > 0:
                    print(drum[lun], '--(', drum[lun - 1], ')->', end='', sep='')
                    lun -= 2
                print(drum[0])
                del drum


nrVirf = int(input('Numarul de virfuri: '))

nrMuchiiMax = nrVirf * (nrVirf - 1)

print('\nCazuri: ')
print('1. Graf rar')
print('2. Graf mediu')
print('3. Graf dens')
case = int(input('Alegeti optiune: '))
if case == 1:
    phi = 0.36
elif case == 2:
    phi = 0.54
else:
    phi = 0.84
per = phi * 100
nrMuchii = 0
dictionary = {}
graf()
print('\nAlgoritmul Dijkstra: ')
start = time.time()
dijsktra(1)
end = time.time()
print('\tTimpul pentru algoritmul Dijkstra este:\t ', end - start)
print('\tNr iteratii: ', count)
print('\n\nAlgoritmul Floyd-Warshall: ')
start = time.time()
floyd(1)
end = time.time()
print('\tTimpul pentru algoritmul Floyd-Warshall este:\t ', end - start)
print('\tNr iteratii: ', count2)


import random
import time


def graf():
    global nrMuchii, nrMuchiiMax
    i = 1
    while i <= nrVirf:
        j = 1
        while j <= nrVirf:
            if i != j:
                r = random.randint(0, 100)
                if r < per:
                    r = random.randint(1, 1000)
                    dictionary[(i, j)] = r
                    nrMuchii += 1
            j += 1
        i += 1
    nrMuchii2 = float(nrMuchiiMax)
    phi2 = nrMuchii / nrMuchii2
    if (case == 1 and (phi2 < 0.32 or phi2 > 0.41)) or (case == 2 and (phi2 < 0.41 or phi2 > 0.68)) or (
            case == 3 and phi2 < 0.68):
        dictionary.clear()
        nrMuchii = 0
        graf()


def dijsktra(sursa):
    global count
    count = 0
    marcat = {}
    dist = {}
    i = 1
    while i <= nrVirf:
        marcat[i] = 0
        i += 1
    i = 1
    while i <= nrVirf:
        dist[i] = 1000000
        i += 1
    dist[sursa] = 0
    i = 0
    while i < nrVirf:
        mi = 1000000
        j = 1
        while j <= nrVirf:
            if dist[j] <= mi:
                if marcat[j] == 0:
                    mi = dist[j]
                    k = j
            j += 1
        for x in dictionary:
            count += 1
            if x[0] == k:
                if marcat[x[1]] == 0:
                    if dist[x[0]] + dictionary[(x[0], x[1])] < dist[x[1]]:
                        dist[x[1]] = dist[x[0]] + dictionary[(x[0], x[1])]
        marcat[k] = 1
        i += 1
    print("Rezultat dijsktra:")
    for i in range(1, nrVirf + 1):
        if i != sursa:
            if dist[i] == 1000000:
                print(sursa, '->', i, 'infinit')
            else:
                pon = dist[i]
                drum = [i]
                while pon != 0:
                    for j in range(1, nrVirf + 1):
                        if (j, drum[len(drum) - 1]) in dictionary:
                            if dist[drum[len(drum) - 1]] - dist[j] == dictionary[(j, drum[len(drum) - 1])]:
                                drum.append(dictionary[(j, drum[len(drum) - 1])])
                                drum.append(j)
                                pon -= dictionary[(j, drum[len(drum) - 3])]
                lun = len(drum) - 1
                while lun > 0:
                    print(drum[lun], '--(', drum[lun - 1], ')->', end='', sep='')
                    lun -= 2
                print(drum[0])
                del drum


def floyd(sursa):
    global count2
    count2 = 0
    global graf1
    dictionary2 = {}
    for i in range(1, nrVirf + 1):
        for j in range(1, nrVirf + 1):
            if (i, j) in dictionary:
                dictionary2[(i, j)] = dictionary[(i, j)]
            else:
                dictionary2[(i, j)] = 1000000
    for i in range(1, nrVirf + 1):
        for j in range(1, nrVirf + 1):
            for k in range(1, nrVirf + 1):
                count2 += 1
                if j != k:
                    dictionary2[(j, k)] = min(dictionary2[(j, k)], dictionary2[(j, i)] + dictionary2[(i, k)])
                else:
                    dictionary2[(j, k)] = 0
    print("Rezultat floyd:")
    for i in range(1, nrVirf + 1):
        if i != sursa:
            if dictionary2[(sursa, i)] == 1000000:
                print(sursa, '->', i, 'infinit')
            else:
                pon = dictionary2[(sursa, i)]
                drum = [i]
                while pon != 0:
                    for j in range(1, nrVirf + 1):
                        if (j, drum[len(drum) - 1]) in dictionary:
                            if dictionary2[(sursa, drum[len(drum) - 1])] - dictionary2[(sursa, j)] == dictionary[
                                (j, drum[len(drum) - 1])]:
                                drum.append(dictionary[(j, drum[len(drum) - 1])])
                                drum.append(j)
                                pon -= dictionary[(j, drum[len(drum) - 3])]
                lun = len(drum) - 1
                while lun > 0:
                    print(drum[lun], '--(', drum[lun - 1], ')->', end='', sep='')
                    lun -= 2
                print(drum[0])
                del drum


nrVirf = int(input('Numarul de virfuri: '))

nrMuchiiMax = nrVirf * (nrVirf - 1)

print('\nCazuri: ')
print('1. Graf rar')
print('2. Graf mediu')
print('3. Graf dens')
case = int(input('Alegeti optiune: '))
if case == 1:
    phi = 0.36
elif case == 2:
    phi = 0.54
else:
    phi = 0.84
per = phi * 100
nrMuchii = 0
dictionary = {}
graf()
print('\nAlgoritmul Dijkstra: ')
start = time.time()
dijsktra(1)
end = time.time()
print('\tTimpul pentru algoritmul Dijkstra este:\t ', end - start)
print('\tNr iteratii: ', count)
print('\n\nAlgoritmul Floyd-Warshall: ')
start = time.time()
floyd(1)
end = time.time()
print('\tTimpul pentru algoritmul Floyd-Warshall este:\t ', end - start)
print('\tNr iteratii: ', count2)


